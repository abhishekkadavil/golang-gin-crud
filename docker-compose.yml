version: '3.3'
services:
  database:
    container_name: postgres-container
    image: postgres:14-alpine
    restart: always
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
    ports:
      - '5432:5432'
    expose:
      - '5432'
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres"]
      interval: 10s
      timeout: 45s
      retries: 10
    volumes:
      - ./InitialScript/01_create_table.sql:/docker-entrypoint-initdb.d/01_create_table.sql
      - ./InitialScript/02_insert_data.sql:/docker-entrypoint-initdb.d/02_insert_data.sql
    networks:
      - my_network
  go-app:
    container_name: go-app-container
    image: abhishekkadavil/golang-gin-crud:v6
    environment:
      DB_URL: 'host=postgres-container user=postgres password=postgres dbname=postgres port=5432 sslmode=disable TimeZone=Asia/Shanghai'
      PORT: '3000'
    ports:
      - '3000:3000'
    depends_on:
      database:
        condition: service_healthy
    networks:
      - my_network

# Define the network
networks:
  my_network:
    driver: bridge